*snipewin.txt*                          Select window most quickly like sniper

Author: Hibiki <mail@4513echo.dev>
License: MIT License
URL: https://github.com/4513ECHO/vim-snipewin
Last change: 2023 Jul 26

==============================================================================
CONTENTS                                                   *snipewin-contents*

Introduction					|snipewin-introduction|
Interface					|snipewin-interface|
  Key Mappings					|snipewin-key-mappings|
  Functions					|snipewin-functions|
  Variables					|snipewin-variables|
  Callbacks					|snipewin-calbacks|
  Highlight Groups				|snipewin-highlight-groups|
About						|snipewin-about|

==============================================================================
INTRODUCTION                                           *snipewin-introduction*

*snipewin* ( *vim-snipewin* ) is a plugin to provide interactive |window|
selector. The selector can be used to manipulate anything about window
through |snipewin-callback| or custom callback.

The main idea is inspired by tmux's `display-panes` feature, vim-|choosewin|
and chowcho.nvim.

https://github.com/t9md/vim-choosewin
https://github.com/tkmpypy/chowcho.nvim

Vim v9.0.0000+ or Neovim v0.8.0+ is required.

==============================================================================
INTERFACE                                                 *snipewin-interface*

------------------------------------------------------------------------------
KEY MAPPINGS                                           *snipewin-key-mappings*

<Plug>(snipewin)                                            *<Plug>(snipewin)*
	The mapping version of |snipe#select()|.

	Expamle: >
		nnoremap <C-w>w <Plug>(snipewin)

------------------------------------------------------------------------------
FUNCTIONS                                                 *snipewin-functions*

snipewin#select([{callback}])                              *snipewin#select()*
	Start selecting windows.
	{callback} is a |Funcref| that called after confirm selecting.
	See |snipewin-callbacks| for details.

------------------------------------------------------------------------------
VARIABLES                                                 *snipewin-variables*

g:snipewin_label_chars                                *g:snipewin_label_chars*
		|String| (default: "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
	The set of charactors used for label.
	If alphabetic charactors are included, they must be upper case.

g:snipewin_label_font                                  *g:snipewin_label_font*
		|String| (default: "large")
	The font used for label. "small" or "large" are available values.

g:snipewin_ignore_single                            *g:snipewin_ignore_single*
		|Boolean| (default: |v:false|)
	If |v:true| quit selecting immediately when only one window exists.

g:snipewin_override_winopts                *g:snipewin_override_winopts*
		|Dictionary| (default: `{}`)
	Override configs of label. See also |popup_create-arguments| for Vim
	and |nvim_open_win()| for Neovim.

------------------------------------------------------------------------------
CALLBACKS                                                 *snipewin-callbacks*

Callback of |snipewin#select()| is a |Funcref| that recieves |window-ID| of
selected window.
If {callback} is ommited, |win_gotoid()| is used. In other words following
expamle is same as default: >

	call snipewin#select({ winid -> win_gotoid(winid) })

BUIlTIN CALLBACKS~
	Following builtin callbacks are available.

g:snipewin#callback#close                          *g:snipewin#callback#close*
	Execute |:close| in target window.

g:snipewin#callback#hide                            *g:snipewin#callback#hide*
	Execute |:hide| in target window.

g:snipewin#callback#only                            *g:snipewin#callback#only*
	Execute |:only| in target window.

g:snipewin#callback#swap                            *g:snipewin#callback#swap*
	Swap displayed buffers between current window and target window.
	If the number of windows is 2, it will fallback to |CTRL-W_x|.

	NOTE: Unlike |CTRL-W_x|, this callback does not actually exchange
	the windows. This means that window-local options (|global-local|)
	will not be inheritd correctly.

------------------------------------------------------------------------------
HIGHLIGHT GROUPS                                   *snipewin-highlight-groups*

SnipeWinLabel                                               *hl-SnipeWinLabel*
	The highlight group used for label of |snipewin#select()|.
	It is linked to `Label` (|group-name|) in default.

==============================================================================
ABOUT                                                         *snipewin-about*

|snipewin| is developed by Hibiki(4513ECHO) and licensed under the MIT
License. Visit the project page for the latest version:

	https://github.com/4513ECHO/vim-snipewin

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
